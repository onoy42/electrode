(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return o}));var a=n(3),r=n(7),l=(n(0),n(91)),i={id:"the-application",title:"The Application"},c={unversionedId:"quick-start/the-application",id:"quick-start/the-application",isDocsHomePage:!1,title:"The Application",description:"The application generated is setup to use typescript.",source:"@site/docs/quick-start/the-application.md",slug:"/quick-start/the-application",permalink:"/electrode/docs/quick-start/the-application",editUrl:"https://github.com/electrode-io/electrode/tree/master/docusaurus/docs/docs/quick-start/the-application.md",version:"current",sidebar:"someSidebar",previous:{title:"The Packages",permalink:"/electrode/docs/quick-start/the-packages"}},b=[{value:"The Files and Directories",id:"the-files-and-directories",children:[]},{value:"The <code>src</code> Directory",id:"the-src-directory",children:[]},{value:"Creating a SubApp",id:"creating-a-subapp",children:[]},{value:"Rendering A SubApp",id:"rendering-a-subapp",children:[]}],p={toc:b};function o(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The application generated is setup to use typescript."),Object(l.b)("p",null,"While typescript is used to validate your ",Object(l.b)("inlineCode",{parentName:"p"},".ts")," code, Electrode X actually uses Babel to transpile your code."),Object(l.b)("h2",{id:"the-files-and-directories"},"The Files and Directories"),Object(l.b)("p",null,"Your app consists of these essential top level directories and files:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Files and Dirs"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"package.json")),Object(l.b)("td",{parentName:"tr",align:null},"npm's package.json")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"xrun-tasks.ts")),Object(l.b)("td",{parentName:"tr",align:null},"The file that loads Electrode X's development tasks for ",Object(l.b)("inlineCode",{parentName:"td"},"xrun")," task runner")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"tsconfig.json")),Object(l.b)("td",{parentName:"tr",align:null},"Typescript config")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"babel.config.js")),Object(l.b)("td",{parentName:"tr",align:null},"Babel config")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},".browserslitsrc")),Object(l.b)("td",{parentName:"tr",align:null},"configuration for ","[browserslist]")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"static")),Object(l.b)("td",{parentName:"tr",align:null},"static web assets")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"src")),Object(l.b)("td",{parentName:"tr",align:null},"Directory for your app's source code")))),Object(l.b)("h2",{id:"the-src-directory"},"The ",Object(l.b)("inlineCode",{parentName:"h2"},"src")," Directory"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"src")," directory is where your app's code is. The sample app we created for you contains these files:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"src\n\u251c\u2500\u2500 app.tsx\n\u251c\u2500\u2500 demo1\n\u2502   \u2514\u2500\u2500 index.tsx\n\u251c\u2500\u2500 demo2\n\u2502   \u251c\u2500\u2500 index.tsx\n\u2502   \u2514\u2500\u2500 reducers.ts\n\u251c\u2500\u2500 demo3\n\u2502   \u251c\u2500\u2500 index.tsx\n\u2502   \u2514\u2500\u2500 react-query-fetch.ts\n\u251c\u2500\u2500 home\n\u2502   \u251c\u2500\u2500 index.tsx\n\u2502   \u251c\u2500\u2500 message.ts\n\u2502   \u2514\u2500\u2500 static-props.tsx\n\u251c\u2500\u2500 import-assets.d.ts\n\u251c\u2500\u2500 info.ts\n\u251c\u2500\u2500 server\n\u2502   \u251c\u2500\u2500 config.ts\n\u2502   \u251c\u2500\u2500 index.ts\n\u2502   \u2514\u2500\u2500 routes.ts\n\u2514\u2500\u2500 styles\n    \u251c\u2500\u2500 demo1.mod.css\n    \u2514\u2500\u2500 demo1.mod.styl\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Everything under ",Object(l.b)("inlineCode",{parentName:"p"},"src/server")," are source for your app's node.js server.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"There are four SubApps defined in the sample app:"))),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"SubApp name"),Object(l.b)("th",{parentName:"tr",align:null},"Location"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"Demo1")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"src/demo1"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"Demo2")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"src/demo2"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"Demo3")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"src/demo3"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"home")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"src/home"))))),Object(l.b)("h2",{id:"creating-a-subapp"},"Creating a SubApp"),Object(l.b)("p",null,"A SubApp is just a React Component that can incorporate extra features Electrode X offer, and will be dynamically imported. You can render a page with multiple SubApps on it, each with its own independent behaviors, such as enabling SSR, or using different data models."),Object(l.b)("p",null,"To create a SubApp:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"First create your ",Object(l.b)("inlineCode",{parentName:"li"},".tsx"),' file, say "hello.tsx", and export a ',Object(l.b)("inlineCode",{parentName:"li"},"subapp")," that's a ",Object(l.b)("inlineCode",{parentName:"li"},"ReactSubApp")," type:")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-tsx"},'import { React, ReactSubApp } from "@xarc/react";\n\nconst Hello = () => <div>Hello, World</div>;\n\nexport const subapp: ReactSubApp = {\n  Component: Hello\n};\n')),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},'Next declare your SubApp in another file, say "app.tsx", and use the ',Object(l.b)("inlineCode",{parentName:"li"},"declareSubApp")," API and dynamic import your subapp.")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-tsx"},'import { declareSubApp } from "@xarc/react";\n\nexport const Hello = declareSubApp({\n  name: "Hello",\n  getModule: () => import("./hello")\n});\n')),Object(l.b)("h2",{id:"rendering-a-subapp"},"Rendering A SubApp"),Object(l.b)("p",null,"After you create a SubApp, you can render it on a page on the node.js server using the ",Object(l.b)("inlineCode",{parentName:"p"},"PageRenderer")," class API, and then send the result back to the browser."),Object(l.b)("p",null,"For example, in ",Object(l.b)("inlineCode",{parentName:"p"},"src/server/routes.ts"),", declare a fastify plugin to register a route that render the page with the ",Object(l.b)("inlineCode",{parentName:"p"},"Hello")," SubApp on it."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},'import { Hello } from "../app";\nimport { PageRenderer } from "@xarc/react";\nimport { ElectrodeFastifyInstance } from "@xarc/fastify-server";\n\nexport async function fastifyPlugin(server: ElectrodeFastifyInstance) {\n  const helloRenderer: PageRenderer = new PageRenderer({\n    pageTitle: "Hello",\n    subApps: [{ name: Hello.name, ssr: true }]\n  });\n\n  server.route({\n    method: "GET",\n    url: "/hello",\n    async handler(request, reply) {\n      const context = await helloRenderer.render({ request });\n      reply.type("text/html");\n      reply.send(context.result);\n    }\n  });\n}\n')))}o.isMDXComponent=!0}}]);